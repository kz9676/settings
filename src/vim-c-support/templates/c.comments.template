§ ========================================================================
§  Comments
§ ========================================================================

§ ------------------------------------------------------------------------
§  frames, descriptions
§ ------------------------------------------------------------------------

== Comments.end-of-line-comment == append, nomenu ==
/* <CURSOR> */
== Comments.frame == map:cfr, shortcut:f  ==
/*------------------------------------------------------------------------
 *  <CURSOR>
 *----------------------------------------------------------------------*/
== Comments.function == map:cfu, shortcut:f  ==
/* 
 * ===  FUNCTION  ========================================================
 *         Name:  |?FUNCTION_NAME|
 *  Description:  <CURSOR>
 * =======================================================================
 */
== Comments.method == map:cme, shortcut:m  ==
/*
 *------------------------------------------------------------------------
 *       Class:  |?CLASSNAME|
 *      Method:  |?CLASSNAME| :: |?METHODNAME|
 * Description:  <CURSOR>
 *------------------------------------------------------------------------
 */
== Comments.class == map:ccl, shortcut:c  ==
/*
 * =======================================================================
 *        Class:  |?CLASSNAME|
 *  Description:  <CURSOR>
 * =======================================================================
 */
== ENDTEMPLATE ==

§ ------------------------------------------------------------------------
§  files, sections
§ ------------------------------------------------------------------------

== SEP: Comments.sep_file ==

== Comments.file description impl == map:cfdi, shortcut:c, start, noindent ==
/*
 * =======================================================================
 *
 * MIT License
 * 
 * Copyright (c) 2020 Kostya Zolotarov
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the 
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * =======================================================================
 *
 *       Filename:  |FILENAME|
 *    Description:   <CURSOR>
 *        Created:  |DATE| |TIME|
 *         Author:  |AUTHOR|, <|EMAIL|>
 *
 * =======================================================================
 */

== Comments.file description header == map:cfdh, shortcut:h, start, noindent ==
/*
 * =======================================================================
 *
 * MIT License
 * 
 * Copyright (c) 2020 Kostya Zolotarov
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the 
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 * =======================================================================
 *
 *       Filename:  |FILENAME|
 *    Description:   <CURSOR>
 *        Created:  |DATE| |TIME|
 *         Author:  |AUTHOR|, <|EMAIL|>
 *
 * =======================================================================
 */
== ENDTEMPLATE ==

== LIST: comments_c_sections == hash ==
  'HEADER FILE INCLUDES'        : 'HEADER FILE INCLUDES   ###############################', 
  'LOCAL MACROS'                : 'MACROS  -  LOCAL TO THIS SOURCE FILE   ###############', 
  'LOCAL TYPE DEFINITIONS'      : 'TYPE DEFINITIONS  -  LOCAL TO THIS SOURCE FILE   #####', 
  'LOCAL DATA TYPES'            : 'DATA TYPES  -  LOCAL TO THIS SOURCE FILE   ###########', 
  'LOCAL VARIABLES'             : 'VARIABLES  -  LOCAL TO THIS SOURCE FILE   ############', 
  'LOCAL PROTOTYPES'            : 'PROTOTYPES  -  LOCAL TO THIS SOURCE FILE   ###########', 
  'EXP.  FUNCTION DEFINITIONS'  : 'FUNCTION DEFINITIONS  -  EXPORTED FUNCTIONS   ########', 
  'LOCAL FUNCTION DEFINITIONS'  : 'FUNCTION DEFINITIONS  -  LOCAL TO THIS SOURCE FILE   #', 
  'LOCAL CLASS DEFINITIONS'     : 'CLASS DEFINITIONS  -  LOCAL TO THIS SOURCE FILE   ####', 
  'EXP.  CLASS IMPLEMENTATIONS' : 'CLASS IMPLEMENTATIONS  -  EXPORTED CLASSES   #########', 
  'LOCAL CLASS IMPLEMENTATIONS' : 'CLASS IMPLEMENTATIONS  -  LOCAL CLASSES   ############', 
== LIST: comments_h_sections == hash ==
  'HEADER FILE INCLUDES'           : 'HEADER FILE INCLUDES   ###########', 
  'EXPORTED MACROS'                : 'EXPORTED MACROS   ################', 
  'EXPORTED TYPE DEFINITIONS'      : 'EXPORTED TYPE DEFINITIONS   ######', 
  'EXPORTED DATA TYPES'            : 'EXPORTED DATA TYPES   ############', 
  'EXPORTED CLASS DEFINITIONS'     : 'EXPORTED CLASS DEFINITIONS   #####', 
  'EXPORTED VARIABLES'             : 'EXPORTED VARIABLES   #############', 
  'EXPORTED FUNCTION DECLARATIONS' : 'EXPORTED FUNCTION DECLARATIONS   #', 
== LIST: comments_keywords == hash ==
  'BUG'         : ':BUG:|DATE| |TIME|:|AUTHORREF|:',
  'COMPILER'    : ':COMPILER:|DATE| |TIME|:|AUTHORREF|:',
  'REMARK'      : ':REMARK:|DATE| |TIME|:|AUTHORREF|:',
  'TODO'        : ':TODO:|DATE| |TIME|:|AUTHORREF|:',
  'WARNING'     : ':WARNING:|DATE| |TIME|:|AUTHORREF|:',
  'WORKAROUND'  : ':WORKAROUND:|DATE| |TIME|:|AUTHORREF|:',
  'new keyword' : ':{+NEW_KEYWORD+}:|DATE| |TIME|:|AUTHORREF|:',
== LIST: comments_special == list ==
  'EMPTY'                         , 
  'FALL THROUGH'                  , 
  'IMPLICIT TYPE CONVERSION'      , 
  'NO RETURN'                     , 
  'NOT REACHED'                   , 
  'TO BE IMPLEMENTED'             , 
  'constant type is long'         , 
  'constant type is unsigned'     , 
  'constant type is unsigned long', 
== LIST: comments_macros == list ==
  'AUTHOR'      , 
  'AUTHORREF'   , 
  'COMPANY'     , 
  'COPYRIGHT'   , 
  'EMAIL'       , 
  'ORGANIZATION', 
== ENDLIST ==

== Comments.C file sections  == expandmenu, append, map:ccs, shortcut:s ==
|PickList( 'C file sections', 'comments_c_sections' )|
/* #####   |PICK|#################### */<CURSOR>
== Comments.H file sections  == expandmenu, append, map:chs, shortcut:s ==
|PickList( 'H file sections', 'comments_h_sections' )|
/* #####   |PICK|######################################## */<CURSOR>
== ENDTEMPLATE ==

MenuShortcut( 'Comments.all sections', 'a' )

== Comments.all sections.implementation, C == below, map:ccc, sc:c ==
|InsertLine('Comments.C file sections', 'pick', 'HEADER FILE INCLUDES'       )|
<CURSOR>
|InsertLine('Comments.C file sections', 'pick', 'LOCAL MACROS'               )|

|InsertLine('Comments.C file sections', 'pick', 'LOCAL TYPE DEFINITIONS'     )|

|InsertLine('Comments.C file sections', 'pick', 'LOCAL DATA TYPES'           )|

|InsertLine('Comments.C file sections', 'pick', 'LOCAL VARIABLES'            )|

|InsertLine('Comments.C file sections', 'pick', 'LOCAL PROTOTYPES'           )|

|InsertLine('Comments.C file sections', 'pick', 'EXP.  FUNCTION DEFINITIONS' )|

|InsertLine('Comments.C file sections', 'pick', 'LOCAL FUNCTION DEFINITIONS' )|

== Comments.all sections.implementation, CPP == below, map:ccp, sc:p ==
|InsertLine('Comments.C file sections', 'pick', 'HEADER FILE INCLUDES'        )|
<CURSOR>
|InsertLine('Comments.C file sections', 'pick', 'LOCAL MACROS'                )|

|InsertLine('Comments.C file sections', 'pick', 'LOCAL TYPE DEFINITIONS'      )|

|InsertLine('Comments.C file sections', 'pick', 'LOCAL DATA TYPES'            )|

|InsertLine('Comments.C file sections', 'pick', 'LOCAL CLASS DEFINITIONS'     )|

|InsertLine('Comments.C file sections', 'pick', 'LOCAL VARIABLES'             )|

|InsertLine('Comments.C file sections', 'pick', 'LOCAL PROTOTYPES'            )|

|InsertLine('Comments.C file sections', 'pick', 'EXP.  FUNCTION DEFINITIONS'  )|

|InsertLine('Comments.C file sections', 'pick', 'LOCAL FUNCTION DEFINITIONS'  )|

|InsertLine('Comments.C file sections', 'pick', 'EXP.  CLASS IMPLEMENTATIONS' )|

|InsertLine('Comments.C file sections', 'pick', 'LOCAL CLASS IMPLEMENTATIONS' )|

== Comments.all sections.header, C == below, map:chc, sc:c ==
|InsertLine('Comments.H file sections', 'pick', 'HEADER FILE INCLUDES'           )|
<CURSOR>
|InsertLine('Comments.H file sections', 'pick', 'EXPORTED MACROS'                )|

|InsertLine('Comments.H file sections', 'pick', 'EXPORTED TYPE DEFINITIONS'      )|

|InsertLine('Comments.H file sections', 'pick', 'EXPORTED DATA TYPES'            )|

|InsertLine('Comments.H file sections', 'pick', 'EXPORTED VARIABLES'             )|

|InsertLine('Comments.H file sections', 'pick', 'EXPORTED FUNCTION DECLARATIONS' )|

== Comments.all sections.header, CPP == below, map:chp, sc:p ==
|InsertLine('Comments.H file sections', 'pick', 'HEADER FILE INCLUDES'           )|
<CURSOR>
|InsertLine('Comments.H file sections', 'pick', 'EXPORTED MACROS'                )|

|InsertLine('Comments.H file sections', 'pick', 'EXPORTED TYPE DEFINITIONS'      )|

|InsertLine('Comments.H file sections', 'pick', 'EXPORTED DATA TYPES'            )|

|InsertLine('Comments.H file sections', 'pick', 'EXPORTED CLASS DEFINITIONS'     )|

|InsertLine('Comments.H file sections', 'pick', 'EXPORTED VARIABLES'             )|

|InsertLine('Comments.H file sections', 'pick', 'EXPORTED FUNCTION DECLARATIONS' )|

== ENDTEMPLATE ==

§ ------------------------------------------------------------------------
§  keywords, special and macros
§  date and time
§ ------------------------------------------------------------------------

== SEP: Comments.sep_develop ==

== Comments.keyword comments == expandmenu, append, map:ckc, shortcut:k ==
|PickList( 'keyword comments', 'comments_keywords' )|
 /* |PICK| <CURSOR> */
== Comments.special comments == expandmenu, append, map:csc, shortcut:s ==
|PickList( 'special comments', 'comments_special' )|
 /* |PICK| */<CURSOR>
== Comments.macros == expandmenu, insert, map:cma, shortcut:m ==
|PickList( 'macro', 'comments_macros' )|
||PICK||<CURSOR>
== Comments.date == insert, map:cd, shortcut:d ==
|DATE|<CURSOR>
== Comments.date time == insert, map:ct, shortcut:t ==
|DATE| |TIME|<CURSOR>
== ENDTEMPLATE ==

